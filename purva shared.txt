public class Employee{

    private Integer empId;

    private String empName;

    //getter setters and constructor

}

class Test{

    public static void main(String[] args){ 

	Employee e1 = new Employee(1, "Vikrant"); 

	Employee e2 = new Employee(2, "Rohit"); 

	Employee e3 = new Employee(1, "Vikrant"); 

	HashMap<Employee, String> hm = new HashMap<Employee, String>();

	hm.put(e1, "ABC");

	hm.put(e2, "PQR");

	hm.put(e3, "XYZ");	

	e2.setEmpId(5);

	String str = hm.get(e2);

    } 

}

There is an employee class which has two attributes 
  1. Name - String
  2. DoB  - java.util.Date
 
Now you have the list of objects of employee class now write an logic to print names of the oldest employees using STREAM API

list.stream().sorted(Comparator.comparing(Employee :: getDate)).limit(1).forEach(i->{
System.out.println(i.getName());
});


public void doCall(int a, int b){
                 if(a>b)
       call(a,b);
                 else 
       call (b,a)        
  }

public class Employee{

    private Integer empId;

    private String empName;

    //getter setters and constructor

}

class Test{

    public static void main(String[] args){ 			

	TreeSet<Employee> ts = new TreeSet<Employee>();			

	Employee e1 = new Employee(1, "Vikrant"); 			

	Employee e2 = new Employee(2, "Rohit"); 			

	ts.add(e1);

	ts.add(e2); 	

    } 

}

---------------------------------------------------------------------------------------------------------------------------------------------------
Q1 ) 
i/p : 4,6,2,7,1,8,3,5,9,10
o/p: 1,2,4,6,7,8,3,5,9,10  this is one coding question 

List<Integer> list2 =list.stream().sorted().collect(Collectors.toList());

List<Integer> list2= list.stream().allMatches()).collect(Collectors.toList());
---------------------------------------------------------------------------------------------------------------------------------------------------

Q2 )

i/p::int[] ar = {-1, 2, 1, 3, -1, 2, 4, 5}; 
o/p::-1  2, 
2  2, 
1  1,

-----------------------------------------------------------------------------------------------------------------------------------------------------


IP:{12, 0, 7, 0, 8, 0, 3}  // OP: [12, 7, 8, 3, 0, 0, 0]

int[] arr ={12, 0, 7, 0, 8, 0, 3};
for(int i=0; i< arr.length;i++){
for(int j=i+1; j< arr.length;j++){
int temp=0;
if(arr[i] != 0){
temp=arr[i];
arr[i]=arr[j];
arr[j]= temp;
}
}
System.out.println(arr[i]);
}








